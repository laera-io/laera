name: Push to default branch

on:
  push:
    branches: [ stable ]
  # TODO: Debug only. Remove before merging.
  pull_request:
    branches: [ stable ]

env:
  FLUTTER_VERSION: 2.0.x
  RUBY_VERSION: '2.7'

jobs:
  lint-test-and-build:
    name: Lint, test, and build dev APK
    runs-on: ubuntu-20.04
    steps:
      - name: Download Git sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all commits, tags, etc

      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Get Flutter dependencies from cache
        uses: actions/cache@v2
        with:
          path: .pub-cache
          key: ${{ runner.os }}-${{ env.FLUTTER_VERSION }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-${{ env.FLUTTER_VERSION }}-pub-

      - name: Lint and test
        run: make ci-before ci

      - name: Upload coverage to codecov.io
        uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          fail_ci_if_error: true
          verbose: true
          file: ./coverage/lcov.info
          flags: unittests

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}

      - name: Get Ruby dependencies from cache
        uses: actions/cache@v2
        with:
          path: android/vendor/bundle
          key: ${{ runner.os }}-${{ env.RUBY_VERSION }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-${{ env.RUBY_VERSION }}-gems-

      - name: Send built APK to Telegram dev chat
        uses: appleboy/telegram-action@v0.1.0
        with:
          to: ${{ secrets.TELEGRAM_DEV_CHAT }}
          token: ${{ secrets.TELEGRAM_DEV_BOT_TOKEN }}
          document: build/app/outputs/flutter-apk/app-debug.apk
          message: |
            repo: `${{ github.repository }}`
            workflow: `${{ github.workflow }}`
            branch/tag: `${{ github.ref }}`
            triggered by: `${{ github.actor }}`
