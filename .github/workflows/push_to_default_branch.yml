name: Push to default branch

on:
  push:
    branches: [ $default-branch ]

env:
  FLUTTER_VERSION: 2.0.x
  RUBY_VERSION: '2.7'

  ACTION_VERSION_CHECKOUT: v2
  ACTION_VERSION_FLUTTER: v1
  ACTION_VERSION_CACHE: v2
  ACTION_VERSION_CODECOV: v1
  ACTION_VERSION_RUBY: v1
  ACTION_VERSION_FASTLANE: v2.0.1
  ACTION_VERSION_ARTIFACT: v2

jobs:
  lint-test-and-build:
    name: Lint, test, and build dev APK
    runs-on: ubuntu-20.04
    steps:
      - name: Download Git sources
        uses: actions/checkout@${{ env.ACTION_VERSION_CHECKOUT }}
        with:
          fetch-depth: 0 # fetch all commits, tags, etc

      - name: Set up Flutter
        uses: subosito/flutter-action@${{ env.ACTION_VERSION_FLUTTER }}
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Get Flutter dependencies from cache
        uses: actions/cache@${{ env.ACTION_VERSION_CACHE }}
        with:
          path: .pub-cache
          key: ${{ runner.os }}-${{ env.FLUTTER_VERSION }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-${{ env.FLUTTER_VERSION }}-pub-

      - name: Lint and test
        run: make ci-before ci

      - name: Upload coverage to codecov.io
        uses: codecov/codecov-action@${{ env.ACTION_VERSION_CODECOV }}
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          fail_ci_if_error: true
          verbose: true
          file: ./coverage/lcov.info
          flags: unittests

      - name: Set up Ruby
        uses: ruby/setup-ruby@${{ env.ACTION_VERSION_RUBY }}
        with:
          ruby-version: ${{ env.RUBY_VERSION }}

      - name: Get Ruby dependencies from cache
        uses: actions/cache@${{ env.ACTION_VERSION_CACHE }}
        with:
          path: android/vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-

      - name: Build dev APK
        uses: maierj/fastlane-action@${{ env.ACTION_VERSION_FASTLANE }}
        run: make build-apk-dev

      - name: Store built APK as an artifact
        uses: actions/upload-artifact@${{ env.ACTION_VERSION_ARTIFACT }}
        with:
          path: build/app/outputs/flutter-apk/app-debug.apk
